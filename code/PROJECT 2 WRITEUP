 Title:  Writeup for Project 2, Fall 2015
 Date:  10/18/15
 Group:	Erika Johnson	erikajoh@usc.edu	
		Heather Persson	hpersson@usc.edu	
		Lorraine Sposto	llsposto@usc.edu

I. Requirements:
- Expand the exception handler to handle new types of interrupts for new syscalls
- Implement the following new system calls: Fork, Exec, Exit, Yield
- Implement system calls for Locks (Acquire, Release) and Conditions (Wait, Signal, and Broadcast) that essentially wrap our implementation from Part 1.
- Implement any other system calls required for use and testing, such as CreateLock, CreateCondition, DestroyLock, DestroyCondiiton and system calls required to upgrade our PassportOffice (such as a Print syscall)
- Bulletproof the kernal from errors sent by user program calls.
- Upgrade the method of memory allocation to a mapped relationship of physical to virtual to allow for multiple programs to run at once.
- Provide way to copy data between the kernel and the user 
- Support multi-threaded multi-programs
- Update the passport office from a part of the Nachos kernal code to a userprogram that can run multiple instances of itself
- Develop tests for all functionality added

II. Assumptions:
	- A thread will explicitly exit out of itself
	- Nachos has finished running when the last running process finishes.

III. Design:
- System calls are handled through the exception handler. The exception handler receives an exception and checks for the corresponding value before executing the correcting system call.
- For the Fork system call, we must create a new thread, then resize the running process's page table to make room for 8 more pages for the new thread. After doing so, we update the appropriate values for the process (location of new thread stack, number of running threads, etc) and call the OS fork.
- For the Exec system call, we must read in the process that is setting up to execute. We must then create a new address space and process, update the process table accordingly, then create a first thread for the process and fork it from the currently executing thread.
- For the Exit system call, we must consider 3 cases. If the thread is not the last thread in the process, it simply frees up its own stack before finishing. If the thread is the last thread in a process, it must clean up the entire process's page table before finishing itself. If the thread is the last thread in the last process, it must halt all of Nachos.
- For the Yeild system call, the machine simply yields.
- For the Lock and Condition system calls, the system call itself simply checks for invalid values of the Lock/Condition before passing the handling off to our implemntation of Locks and Conditions from Project 1.
- Page Table must keep track of the relationship between virtual and physical pages, and is unique to every process that is created
- The Process Table keeps track of all processes. Processes are indexed on creation so that they may be kept track of in the process table.
- A process contains and address space, an array to keep track of thread stacks, the and number of currently active threads.
- A thread contains an index that indicates it is the nth thread created in the process. In this way, the location of the first page of their stack can be referenced in the process struct.
- A thread interfaces with the process table by looking at the index of its address space, which is the same for all threads in a process. The process interfaces with threads by using their index to access their thread stack. 

IV. Implementation:
	+ Files Modified
		addrspace.cc - updated constructor to correclty map virtual memory to a physical page, changing variable scope (or using getters/setters) to be able to be accessed by threads
		exception.cc - implementation of all new system calls
		progtest.cc - updating the process table with the very first process
		start.s - added assembly for new system calls
		syscall.h - added new #define values for new system calls, created function prototypes
		system.h - new global variables delcarations
		system.cc - new global varaible initialization
		thread.h/cc - addition of counter

	+ Files added
		passport_office.c - passport office user program
		run_passport_office.c - program running two passport offices
		helloworld.c - short program to test exec functionality
		testcondition.c - testing condition functionality
		testfork.c - testing fork functionality
		testlock.c - testing lock functionality	
		testlockbad.c - testing bad calls to lock syscalls
		testlockcv1.c - tests locks and cv combined
		testlockcv2.c - expanded test for locks and cvs
		testlockcv3.c - expanded test for locks and cvs
		testlockcvbad1.c - testing bad input for conditions and locks
		testlockcvbad2.c - testing additional bad input for conditions and locks
		testprint.c - testing print int syscall
		testrand.c - testing rand syscall
		testforkexec1.c - testing fork/exec combined functionality
		testforkexec2.c - testing fork/exec combined functionality
		testforkexecbad.c - testing bad input for fork/exec commands

	+ Data Structures added, and the file they were added to.
		system.h/cc - 
			struct kernelCondition {
				Condition * condition;
				AddrSpace * addrsp;
				bool isToBeDeleted;
			};

			struct kernelLock {
				Lock * lock;
				AddrSpace * addrsp;
				bool isToBeDeleted;
			};

			struct process {
				int * threadStacks;
				int numThreadsRunning; 
				int numThreadsTotal;
			};

			kernelCondition kernelConditionList[]
			kernelLock kernelLockList[] 
			BitMap bitmap
			Lock bitmapLock
			process processTable[]
			Lock processLock

	+ Data Structures modified, and the file they were added to.
			
		addrspace.h:
			AddrSpace - addition of int for processIndex and numPages
		thread.h 
			Thread - addition of int for threadIndex

	+ Functions added and in which file.
			syscall.h (prototypes):
				Yield() - interface for userprogram to call Yield 
				Acquire(int index) - interface for userprogram to call Acquire
				Release(int index) - interface for userprogram to call Releae
				Wait(int conditionIndex, int lockIndex) - interface for userprogram to call Wait
				Signal(int conditionIndex, int lockIndex) - interface for userprogram to call Signal
				Broadcast(int conditionIndex, int lockIndex) - interface for userprogram to call Broadcast
				CreateLock(char* name, int len) - interface for userprogram to create a Lock to use
				DestroyLock(int index) - interface for userprogram to destroy a Lock no longer in use
				CreateCondition(char* name, int len) -  interface for userprogram to create a Condition to use
				DestroyCondition(int index) - interface for userprogram to destroy a Lock no longer in use
				Rand() - generate a random number
				PrintInt(char * name) - print an integer value to the console

			exception.h/cc
				Exit_Syscall(int status) - terminates the execution of the currently running thread
				Exec_Syscall(int vaddr, int len) - begins a new process
				exec_thread(int vaddr) - helper funciton to kick off new process
				kernel_thread(int vaddr) - helper function to kick off new thread
				Fork_Syscall(int vaddr) - creates a new thread within a process
				Yield_Syscall(int vaddr) - relinquishes control of the CPU
				Acquire_Syscall(int index) - acquires the lock with the given index
				Release_Syscall(int index) - releases lock with the given index
				Wait_Syscall(int conditionIndex, int lockIndex) - has the condition at the given index wait to be signaled
				Signal_Syscall(int conditionIndex, int lockIndex) - signals the first waiting thread on the condition at the given index
				Broadcast_Syscall(int conditionIndex, int lockIndex) - signals all waiting threads on the condition at the given index
				CreateLock_Syscall(int vaddr, int len) - creates a lock with given name
				DestroyLock_Syscall(int index) - destroys lock contained at index
				CreateCondition_Syscall(int vaddr, int len) - creates a condition with given name
				DestroyCondition_Syscall(int index) - destroys condition contained at index
				Rand_Syscall() - generates a random number for a user program
				PrintInt_Syscall() - prints an int for a user program


	+ Functions modified and in which file.
			addrspace.cc:
				AddrSpace(OpenFile *executable) - change from supporting uniprogram to multiprogram by splitting out physical/virtual to a non-direct mapping
			exception.cc:
				ExceptionHandler(ExceptionType which) - expand for new syscall cases
			progtest.cc:
				StartProcess(char *filename) - add very first process to the process table

V. Testing:  (For each test case, you must show)

+ helloworld: 
	- helper user program that prints "Hello World".
+ matmult2: 
	- helper user program that is a copy of matmult, but prints the output to console.
+ passport_office:
	- fully-converted passport office as a user program
	- The output is the output from Project 1 of 10 customers going through the passport office.
	- Output:
Cashier 0 is going on break.
PictureClerk 0 is going on break.
ApplicationClerk 0 is going on break.
Customer 0 is entering the passport office.
Customer 0 has gotten in the regular line for PictureClerk 0.
Customer 1 is entering the passport office.
Customer 1 has gotten in the regular line for PictureClerk 0.
Customer 2 is entering the passport office.
Customer 2 has gotten in the regular line for PictureClerk 0.
Customer 3 is entering the passport office.
Customer 3 has gotten in the regular line for PictureClerk 0.
Customer 4 is entering the passport office.
Customer 4 has gotten in the regular line for PictureClerk 0.
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $0 for Cashiers
Manager  has counted amounts of $0 for the passport office
Manager 0 has woken up a PictureClerk.PictureClerk 0 is coming off break.
PictureClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
PictureClerk 0 has received SSN 0 from Customer  .0 .
PictureClerk 0 has taken a picture of Customer 0.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 0 does like their picture.
Customer 5 is leaving PictureClerk 0's counter.
Customer 0 has gotten in regular line for AppClerk 0.
PictureClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
PictureClerk 0 has received SSN 1 from Customer  .1 .
PictureClerk 0 has taken a picture of Customer 1.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 1 does like their picture.
Customer 5 is leaving PictureClerk 0's counter.
Customer 1 has gotten in regular line for AppClerk 0.
PictureClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
PictureClerk 0 has received SSN 2 from Customer  .2 .
PictureClerk 0 has taken a picture of Customer 2.
Customer 5 does like their picture from PictureClerk 0.
Manager 0 has woken up an ApplicationClerk.
PictureClerk 0 has been told that Customer 2 does like their picture.
ApplicationClerk 0 is coming off break.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 5 is leaving PictureClerk 0's counter.
Customer 2 has gotten in regular line for AppClerk 0.
Customer 0 has given SSN  to Pictu0 to AppClerk 0.
Customer 0 is waiting for clerk 0to file the application.
PictureClerk 0 has signalled a Customer to come to their counter.
ApplicationClerk 0 has received SSN 0 from Customer  .0 .
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
PictureClerk 0 has received SSN 3 from Customer  .3 .
PictureClerk 0 has taken a picture of Customer 3.
Customer 5 does not like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 3 does not like their picture.
PictureClerk 0 has taken a picture of Customer 3.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 3 does like their picture.
Customer 5 is leaving PictureClerk 0's counter.
Customer 3 has gotten in regular line for AppClerk 0.
PictureClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
PictureClerk 0 has received SSN 4 from Customer  .4 .
PictureClerk 0 has taken a picture of Customer 4.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 4 does like their picture.
Customer 5 is leaving PictureClerk 0's counter.
Customer 4 has gotten in regular line for AppClerk 0.
PictureClerk 0 is going on break.
ApplicationClerk 0 has recorded a complete application for Customer 0.
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $0 for Cashiers
Manager  has counted amounts of $0 for the passport office
Customer 0 is leaving ApplicationClerk 0's counter.
Customer 0 has gotten in regular line for PassportClerk 0.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 1 has given SSN  to Pictu0 to AppClerk 0.
Customer 1 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 1 from Customer  .1 .
Manager 0 has woken up a PassportClerk.
PassportClerk 0 is coming off break.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 0 has given SSN  to Pictu0 to PassportClerk 0.
PassportClerk 0 has received SSN 0 from Customer  .0 .
PassportClerk 0 has determined that Customer 0 does have both their application and picture completed
ApplicationClerk 0 has recorded a complete application for Customer 1.
Customer 1 is leaving ApplicationClerk 0's counter.
Customer 1 has gotten in regular line for PassportClerk 0.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 2 has given SSN  to Pictu0 to AppClerk 0.
Customer 2 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 2 from Customer  .2 .
ApplicationClerk 0 has recorded a complete application for Customer 2.
Customer 2 is leaving ApplicationClerk 0's counter.
Customer 2 has gotten in regular line for PassportClerk 0.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 3 has given SSN  to Pictu0 to AppClerk 0.
Customer 3 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 3 from Customer  .3 .
PassportClerk 0 has recorded Customer 0 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $0 for Cashiers
Manager  has counted amounts of $0 for the passport office
Customer 0 is leaving PassportClerk 0's counter.
Customer 0 has gotten in regular line for Cashier 0.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 1 has given SSN  to Pictu0 to PassportClerk 0.
PassportClerk 0 has received SSN 1 from Customer  .1 .
PassportClerk 0 has determined that Customer 1 does have both their application and picture completed
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Cashier 0 has received SSN 0 from Customer  .0 .
Cashier 0 has verified that0 has been certified by a PassportClerk.
Customer 0 has given SSN  to Pictu0 to Cashier 0.
Customer 0 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 0 after certification.Cashier 0 has provided Customer 0 their completed passport.Cashier 0 has recorded that Customer 0 has been given their completed passport.
Customer 0 is leaving Cashier 0's counter.
Customer 0 is leaving the Passport Office
Cashier 0 is going on break.
ApplicationClerk 0 has recorded a complete application for Customer 3.
Customer 3 is leaving ApplicationClerk 0's counter.
Customer 3 has gotten in regular line for PassportClerk 0.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 4 has given SSN  to Pictu0 to AppClerk 0.
Customer 4 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 4 from Customer  .4 .
PassportClerk 0 has recorded Customer 1 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $100 for Cashiers
Manager  has counted amounts of $100 for the passport office
Customer 1 is leaving PassportClerk 0's counter.
Customer 1 has gotten in regular line for Cashier 0.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 2 has given SSN  to Pictu0 to PassportClerk 0.
PassportClerk 0 has received SSN 2 from Customer  .2 .
PassportClerk 0 has determined that Customer 2 does have both their application and picture completed
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
ApplicationClerk 0 has recorded a complete application for Customer 4.
Cashier 0 has received SSN 1 from Customer  .1 .
Cashier 0 has verified that1 has been certified by a PassportClerk.
Customer 4 is leaving ApplicationClerk 0's counter.
Customer 4 has gotten in regular line for PassportClerk 0.
Customer 1 has given SSN  to Pictu0 to Cashier 0.
ApplicationClerk 0 is going on break.
Customer 1 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 1 after certification.Cashier 0 has provided Customer 1 their completed passport.Cashier 0 has recorded that Customer 1 has been given their completed passport.
Customer 1 is leaving Cashier 0's counter.
Customer 1 is leaving the Passport Office
Cashier 0 is going on break.
PassportClerk 0 has recorded Customer 2 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $200 for Cashiers
Manager  has counted amounts of $200 for the passport office
Customer 2 is leaving PassportClerk 0's counter.
Customer 2 has gotten in regular line for Cashier 0.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 3 has given SSN  to Pictu0 to PassportClerk 0.
PassportClerk 0 has received SSN 3 from Customer  .3 .
PassportClerk 0 has determined that Customer 3 does have both their application and picture completed
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Cashier 0 has received SSN 2 from Customer  .2 .
Cashier 0 has verified that2 has been certified by a PassportClerk.
Customer 2 has given SSN  to Pictu0 to Cashier 0.
Customer 2 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 2 after certification.Cashier 0 has provided Customer 2 their completed passport.Cashier 0 has recorded that Customer 2 has been given their completed passport.
Customer 2 is leaving Cashier 0's counter.
Customer 2 is leaving the Passport Office
Cashier 0 is going on break.
PassportClerk 0 has recorded Customer 3 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $300 for Cashiers
Manager  has counted amounts of $300 for the passport office
Customer 3 is leaving PassportClerk 0's counter.
Customer 3 has gotten in regular line for Cashier 0.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 4 has given SSN  to Pictu0 to PassportClerk 0.
PassportClerk 0 has received SSN 4 from Customer  .4 .
PassportClerk 0 has determined that Customer 4 does have both their application and picture completed
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Cashier 0 has received SSN 3 from Customer  .3 .
Cashier 0 has verified that3 has been certified by a PassportClerk.
Customer 3 has given SSN  to Pictu0 to Cashier 0.
Customer 3 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 3 after certification.Cashier 0 has provided Customer 3 their completed passport.Cashier 0 has recorded that Customer 3 has been given their completed passport.
Customer 3 is leaving Cashier 0's counter.
Customer 3 is leaving the Passport Office
Cashier 0 is going on break.
PassportClerk 0 has recorded Customer 4 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $400 for Cashiers
Manager  has counted amounts of $400 for the passport office
Customer 4 is leaving PassportClerk 0's counter.
Customer 4 has gotten in regular line for Cashier 0.
PassportClerk 0 is going on break.
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Cashier 0 has received SSN 4 from Customer  .4 .
Cashier 0 has verified that4 has been certified by a PassportClerk.
Customer 4 has given SSN  to Pictu0 to Cashier 0.
Customer 4 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 4 after certification.Cashier 0 has provided Customer 4 their completed passport.Cashier 0 has recorded that Customer 4 has been given their completed passport.
Customer 4 is leaving Cashier 0's counter.
Customer 4 is leaving the Passport Office
Cashier 0 is going on break.

+ run_passport_office:
	- runs the passport office twice
	- The output is from two different passport offices serving 10 customers to completion
	- Output:
run_passport_office: executes two instances of the passport office.
PassportClerk 0 is going on break.
        Non-owner thread kernel_thread 2 cannot release lock ppClerkIndexLock!
Cashier 0 is going on break.
PictureClerk 0 is going on break.
ApplicationClerk 0 is going on break.
Customer 0 is entering the passport office.
Customer 0 has gotten in the regular line for PictureClerk 0.
Customer 1 is entering the passport office.
Customer 1 has gotten in the regular line for PictureClerk 0.
Customer 2 is entering the passport office.
Customer 2 has gotten in the regular line for PictureClerk 0.
Customer 3 is entering the passport office.
Customer 3 has gotten in the regular line for PictureClerk 0.
Customer 4 is entering the passport office.
Customer 4 has gotten in the regular line for PictureClerk 0.
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $0 for Cashiers
Manager  has counted amounts of $0 for the passport office
Manager 0 has woken up a PictureClerk.PassportClerk 0 is going on break.
        Non-owner thread kernel_thread 2 cannot release lock ppClerkIndexLock!
Cashier 0 is going on break.
PictureClerk 0 is going on break.
ApplicationClerk 0 is going on break.
Customer 0 is entering the passport office.
Customer 0 has gotten in regular line for AppClerk 0.
Customer 1 is entering the passport office.
Customer 1 has gotten in regular line for AppClerk 0.
Customer 2 is entering the passport office.
Customer 2 has gotten in regular line for AppClerk 0.
Customer 3 is entering the passport office.
Customer 3 has gotten in regular line for AppClerk 0.
Customer 4 is entering the passport office.
Customer 4 has gotten in regular line for AppClerk 0.
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $0 for Cashiers
Manager  has counted amounts of $0 for the passport office
Manager 0 has woken up an ApplicationClerk.
PictureClerk 0 is coming off break.
PictureClerk 0 has signalled a Customer to come to their counter.
ApplicationClerk 0 is coming off break.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
Customer 0 has given SSN  to Pictu0 to AppClerk 0.
Customer 0 is waiting for clerk 0to file the application.
PictureClerk 0 has received SSN 0 from Customer  .0 .
PictureClerk 0 has taken a picture of Customer 0.
ApplicationClerk 0 has received SSN 0 from Customer  .0 .
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 0 does like their picture.
Customer 5 is leaving PictureClerk 0's counter.
Customer 0 has gotten in regular line for AppClerk 0.
PictureClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
PictureClerk 0 has received SSN 1 from Customer  .1 .
PictureClerk 0 has taken a picture of Customer 1.
Customer 5 does not like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 1 does not like their picture.
PictureClerk 0 has taken a picture of Customer 1.
Customer 5 does not like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 1 does not like their picture.
PictureClerk 0 has taken a picture of Customer 1.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 1 does like their picture.
Customer 5 is leaving PictureClerk 0's counter.
Customer 1 has gotten in regular line for AppClerk 0.
PictureClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
PictureClerk 0 has received SSN 2 from Customer  .2 .
PictureClerk 0 has taken a picture of Customer 2.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 2 does like their picture.
Customer 5 is leaving PictureClerk 0's counter.
Customer 2 has gotten in regular line for AppClerk 0.
PictureClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
PictureClerk 0 has received SSN 3 from Customer  .3 .
PictureClerk 0 has taken a picture of Customer 3.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 3 does like their picture.
Customer 5 is leaving PictureClerk 0's counter.
Customer 3 has gotten in regular line for AppClerk 0.
PictureClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
PictureClerk 0 has received SSN 4 from Customer  .4 .
PictureClerk 0 has taken a picture of Customer 4.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 4 does like their picture.
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $0 for Cashiers
Manager  has counted amounts of $0 for the passport office
Manager 0 has woken up an ApplicationClerk.
Customer 5 is leaving PictureClerk 0's counter.
Customer 4 has gotten in regular line for AppClerk 0.
ApplicationClerk 0 is coming off break.
ApplicationClerk 0 has signalled a Customer to come to their counter.
PictureClerk 0 is going on break.
Customer 0 has given SSN  to Pictu0 to AppClerk 0.
Customer 0 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 0 from Customer  .0 .
ApplicationClerk 0 has recorded a complete application for Customer 0.
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $0 for Cashiers
Manager  has counted amounts of $0 for the passport office
Customer 0 is leaving ApplicationClerk 0's counter.
Customer 0 has gotten in the regular line for PictureClerk 0.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 1 has given SSN  to Pictu0 to AppClerk 0.
Customer 1 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 1 from Customer  .1 .
ApplicationClerk 0 has recorded a complete application for Customer 0.
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $0 for Cashiers
Manager  has counted amounts of $0 for the passport office
Customer 0 is leaving ApplicationClerk 0's counter.
Customer 0 has gotten in regular line for PassportClerk 0.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 1 has given SSN  to Pictu0 to AppClerk 0.
Customer 1 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 1 from Customer  .1 .
Manager 0 has woken up a PassportClerk.
PassportClerk 0 is coming off break.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 0 has given SSN  to Pictu0 to PassportClerk 0.
PassportClerk 0 has received SSN 0 from Customer  .0 .
PassportClerk 0 has determined that Customer 0 does have both their application and picture completed
Manager 0 has woken up a PictureClerk.PictureClerk 0 is coming off break.
PictureClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
PictureClerk 0 has received SSN 0 from Customer  .0 .
PictureClerk 0 has taken a picture of Customer 0.
Customer 5 does not like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 0 does not like their picture.
PictureClerk 0 has taken a picture of Customer 0.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 0 does like their picture.
Customer 5 is leaving PictureClerk 0's counter.
Customer 0 has gotten in regular line for PassportClerk 0.
PictureClerk 0 is going on break.
ApplicationClerk 0 has recorded a complete application for Customer 1.
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $0 for Cashiers
Manager  has counted amounts of $0 for the passport office
Manager 0 has woken up a PassportClerk.
Customer 1 is leaving ApplicationClerk 0's counter.
Customer 1 has gotten in the regular line for PictureClerk 0.
PassportClerk 0 is coming off break.
PassportClerk 0 has signalled a Customer to come to their counter.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 0 has given SSN  to Pictu0 to PassportClerk 0.
Customer 2 has given SSN  to Pictu0 to AppClerk 0.
Customer 2 is waiting for clerk 0to file the application.
PassportClerk 0 has received SSN 0 from Customer  .0 .
PassportClerk 0 has determined that Customer 0 does have both their application and picture completed
ApplicationClerk 0 has received SSN 2 from Customer  .2 .
Manager 0 has woken up a PictureClerk.PictureClerk 0 is coming off break.
PictureClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
PictureClerk 0 has received SSN 1 from Customer  .1 .
PictureClerk 0 has taken a picture of Customer 1.
Customer 5 does not like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 1 does not like their picture.
PictureClerk 0 has taken a picture of Customer 1.
ApplicationClerk 0 has recorded a complete application for Customer 1.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 1 does like their picture.
Customer 1 is leaving ApplicationClerk 0's counter.
Customer 1 has gotten in regular line for PassportClerk 0.
Customer 5 is leaving PictureClerk 0's counter.
Customer 1 has gotten in regular line for PassportClerk 0.
ApplicationClerk 0 has signalled a Customer to come to their counter.
PictureClerk 0 is going on break.
Customer 2 has given SSN  to Pictu0 to AppClerk 0.
Customer 2 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 2 from Customer  .2 .
ApplicationClerk 0 has recorded a complete application for Customer 2.
Customer 2 is leaving ApplicationClerk 0's counter.
Customer 2 has gotten in the regular line for PictureClerk 0.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 3 has given SSN  to Pictu0 to AppClerk 0.
Customer 3 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 3 from Customer  .3 .
PassportClerk 0 has recorded Customer 0 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $0 for Cashiers
Manager  has counted amounts of $0 for the passport office
Customer 0 is leaving PassportClerk 0's counter.
Customer 0 has gotten in regular line for Cashier 0.
ApplicationClerk 0 has recorded a complete application for Customer 2.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 2 is leaving ApplicationClerk 0's counter.
Customer 2 has gotten in regular line for PassportClerk 0.
Customer 1 has given SSN  to Pictu0 to PassportClerk 0.
ApplicationClerk 0 has signalled a Customer to come to their counter.
PassportClerk 0 has received SSN 1 from Customer  .1 .
PassportClerk 0 has determined that Customer 1 does have both their application and picture completed
Customer 3 has given SSN  to Pictu0 to AppClerk 0.
Customer 3 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 3 from Customer  .3 .
PassportClerk 0 has recorded Customer 0 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $0 for Cashiers
Manager  has counted amounts of $0 for the passport office
Manager 0 has woken up a PictureClerk.Customer 0 is leaving PassportClerk 0's counter.
Customer 0 has gotten in regular line for Cashier 0.
PictureClerk 0 is coming off break.
PictureClerk 0 has signalled a Customer to come to their counter.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
Customer 1 has given SSN  to Pictu0 to PassportClerk 0.
PictureClerk 0 has received SSN 2 from Customer  .2 .
PictureClerk 0 has taken a picture of Customer 2.
PassportClerk 0 has received SSN 1 from Customer  .1 .
PassportClerk 0 has determined that Customer 1 does have both their application and picture completed
Customer 5 does not like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 2 does not like their picture.
PictureClerk 0 has taken a picture of Customer 2.
Customer 5 does not like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 2 does not like their picture.
PictureClerk 0 has taken a picture of Customer 2.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 2 does like their picture.
Customer 5 is leaving PictureClerk 0's counter.
Customer 2 has gotten in regular line for PassportClerk 0.
Manager 0 has woken up a Cashier.
PictureClerk 0 is going on break.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Manager 0 has woken up a Cashier.
Cashier 0 has received SSN 0 from Customer  .0 .
Cashier 0 has verified that0 has been certified by a PassportClerk.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Customer 0 has given SSN  to Pictu0 to Cashier 0.
Cashier 0 has received SSN 0 from Customer  .0 .
Cashier 0 has verified that0 has been certified by a PassportClerk.
Customer 0 has given Cashier  $100.
 0 $100.
Customer 0 has given SSN  to Pictu0 to Cashier 0.
Cashier 0 has received the $100 from Customer 0 after certification.Cashier 0 has provided Customer 0 their completed passport.Cashier 0 has recorded that Customer 0 has been given their completed passport.
Customer 0 is leaving Cashier 0's counter.
Customer 0 is leaving the Passport Office
Customer 0 has given Cashier  $100.
 0 $100.
Cashier 0 is going on break.
Cashier 0 has received the $100 from Customer 0 after certification.Cashier 0 has provided Customer 0 their completed passport.Cashier 0 has recorded that Customer 0 has been given their completed passport.
Customer 0 is leaving Cashier 0's counter.
Customer 0 is leaving the Passport Office
Cashier 0 is going on break.
ApplicationClerk 0 has recorded a complete application for Customer 3.
Customer 3 is leaving ApplicationClerk 0's counter.
Customer 3 has gotten in the regular line for PictureClerk 0.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 4 has given SSN  to Pictu0 to AppClerk 0.
Customer 4 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 4 from Customer  .4 .
ApplicationClerk 0 has recorded a complete application for Customer 3.
Customer 3 is leaving ApplicationClerk 0's counter.
Customer 3 has gotten in regular line for PassportClerk 0.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 4 has given SSN  to Pictu0 to AppClerk 0.
Customer 4 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 4 from Customer  .4 .
ApplicationClerk 0 has recorded a complete application for Customer 4.
Customer 4 is leaving ApplicationClerk 0's counter.
Customer 4 has gotten in the regular line for PictureClerk 0.
PassportClerk 0 has recorded Customer 1 passport documentation
ApplicationClerk 0 is going on break.
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $100 for Cashiers
Manager  has counted amounts of $100 for the passport office
Customer 1 is leaving PassportClerk 0's counter.
Customer 1 has gotten in regular line for Cashier 0.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 2 has given SSN  to Pictu0 to PassportClerk 0.
PassportClerk 0 has received SSN 2 from Customer  .2 .
PassportClerk 0 has determined that Customer 2 does have both their application and picture completed
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Cashier 0 has received SSN 1 from Customer  .1 .
Cashier 0 has verified that1 has been certified by a PassportClerk.
Customer 1 has given SSN  to Pictu0 to Cashier 0.
Customer 1 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 1 after certification.Cashier 0 has provided Customer 1 their completed passport.Cashier 0 has recorded that Customer 1 has been given their completed passport.
Customer 1 is leaving Cashier 0's counter.
Customer 1 is leaving the Passport Office
PassportClerk 0 has recorded Customer 1 passport documentation
Cashier 0 is going on break.
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $100 for Cashiers
Manager  has counted amounts of $100 for the passport office
Manager 0 has woken up a PictureClerk.Customer 1 is leaving PassportClerk 0's counter.
Customer 1 has gotten in regular line for Cashier 0.
PictureClerk 0 is coming off break.
PictureClerk 0 has signalled a Customer to come to their counter.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
Customer 2 has given SSN  to Pictu0 to PassportClerk 0.
PictureClerk 0 has received SSN 3 from Customer  .3 .
PictureClerk 0 has taken a picture of Customer 3.
PassportClerk 0 has received SSN 2 from Customer  .2 .
PassportClerk 0 has determined that Customer 2 does have both their application and picture completed
Customer 5 does like their picture from PictureClerk 0.
ApplicationClerk 0 has recorded a complete application for Customer 4.
PictureClerk 0 has been told that Customer 3 does like their picture.
Manager 0 has woken up a Cashier.
Customer 4 is leaving ApplicationClerk 0's counter.
Customer 4 has gotten in regular line for PassportClerk 0.
Customer 5 is leaving PictureClerk 0's counter.
Customer 3 has gotten in regular line for PassportClerk 0.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
ApplicationClerk 0 is going on break.
PictureClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
Cashier 0 has received SSN 1 from Customer  .1 .
Cashier 0 has verified that1 has been certified by a PassportClerk.
PictureClerk 0 has received SSN 4 from Customer  .4 .
PictureClerk 0 has taken a picture of Customer 4.
Customer 1 has given SSN  to Pictu0 to Cashier 0.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 4 does like their picture.
Customer 1 has given Cashier  $100.
 0 $100.
Customer 5 is leaving PictureClerk 0's counter.
Customer 4 has gotten in regular line for PassportClerk 0.
Cashier 0 has received the $100 from Customer 1 after certification.Cashier 0 has provided Customer 1 their completed passport.Cashier 0 has recorded that Customer 1 has been given their completed passport.
PictureClerk 0 is going on break.
Customer 1 is leaving Cashier 0's counter.
Customer 1 is leaving the Passport Office
Cashier 0 is going on break.
PassportClerk 0 has recorded Customer 2 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $200 for Cashiers
Manager  has counted amounts of $200 for the passport office
Customer 2 is leaving PassportClerk 0's counter.
Customer 2 has gotten in regular line for Cashier 0.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 3 has given SSN  to Pictu0 to PassportClerk 0.
PassportClerk 0 has received SSN 3 from Customer  .3 .
PassportClerk 0 has determined that Customer 3 does have both their application and picture completed
PassportClerk 0 has recorded Customer 2 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $200 for Cashiers
Manager  has counted amounts of $200 for the passport office
Customer 2 is leaving PassportClerk 0's counter.
Customer 2 has gotten in regular line for Cashier 0.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 3 has given SSN  to Pictu0 to PassportClerk 0.
PassportClerk 0 has received SSN 3 from Customer  .3 .
PassportClerk 0 has determined that Customer 3 does have both their application and picture completed
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Cashier 0 has received SSN 2 from Customer  .2 .
Cashier 0 has verified that2 has been certified by a PassportClerk.
Customer 2 has given SSN  to Pictu0 to Cashier 0.
Customer 2 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 2 after certification.Cashier 0 has provided Customer 2 their completed passport.Cashier 0 has recorded that Customer 2 has been given their completed passport.
Customer 2 is leaving Cashier 0's counter.
Customer 2 is leaving the Passport Office
Cashier 0 is going on break.
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Cashier 0 has received SSN 2 from Customer  .2 .
Cashier 0 has verified that2 has been certified by a PassportClerk.
Customer 2 has given SSN  to Pictu0 to Cashier 0.
Customer 2 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 2 after certification.Cashier 0 has provided Customer 2 their completed passport.Cashier 0 has recorded that Customer 2 has been given their completed passport.
Customer 2 is leaving Cashier 0's counter.
Customer 2 is leaving the Passport Office
Cashier 0 is going on break.
PassportClerk 0 has recorded Customer 3 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $300 for Cashiers
Manager  has counted amounts of $300 for the passport office
Customer 3 is leaving PassportClerk 0's counter.
Customer 3 has gotten in regular line for Cashier 0.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 4 has given SSN  to Pictu0 to PassportClerk 0.
PassportClerk 0 has received SSN 4 from Customer  .4 .
PassportClerk 0 has determined that Customer 4 does have both their application and picture completed
PassportClerk 0 has recorded Customer 3 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $300 for Cashiers
Manager  has counted amounts of $300 for the passport office
Customer 3 is leaving PassportClerk 0's counter.
Customer 3 has gotten in regular line for Cashier 0.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 4 has given SSN  to Pictu0 to PassportClerk 0.
PassportClerk 0 has received SSN 4 from Customer  .4 .
PassportClerk 0 has determined that Customer 4 does have both their application and picture completed
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Cashier 0 has received SSN 3 from Customer  .3 .
Cashier 0 has verified that3 has been certified by a PassportClerk.
Customer 3 has given SSN  to Pictu0 to Cashier 0.
Customer 3 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 3 after certification.Cashier 0 has provided Customer 3 their completed passport.Cashier 0 has recorded that Customer 3 has been given their completed passport.
Customer 3 is leaving Cashier 0's counter.
Customer 3 is leaving the Passport Office
Cashier 0 is going on break.
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Cashier 0 has received SSN 3 from Customer  .3 .
Cashier 0 has verified that3 has been certified by a PassportClerk.
Customer 3 has given SSN  to Pictu0 to Cashier 0.
Customer 3 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 3 after certification.Cashier 0 has provided Customer 3 their completed passport.Cashier 0 has recorded that Customer 3 has been given their completed passport.
Customer 3 is leaving Cashier 0's counter.
Customer 3 is leaving the Passport Office
Cashier 0 is going on break.
PassportClerk 0 has recorded Customer 4 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $400 for Cashiers
Manager  has counted amounts of $400 for the passport office
Customer 4 is leaving PassportClerk 0's counter.
Customer 4 has gotten in regular line for Cashier 0.
PassportClerk 0 is going on break.
PassportClerk 0 has recorded Customer 4 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $400 for Cashiers
Manager  has counted amounts of $400 for the passport office
Customer 4 is leaving PassportClerk 0's counter.
Customer 4 has gotten in regular line for Cashier 0.
PassportClerk 0 is going on break.
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Cashier 0 has received SSN 4 from Customer  .4 .
Cashier 0 has verified that4 has been certified by a PassportClerk.
Customer 4 has given SSN  to Pictu0 to Cashier 0.
Customer 4 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 4 after certification.Cashier 0 has provided Customer 4 their completed passport.Cashier 0 has recorded that Customer 4 has been given their completed passport.
Customer 4 is leaving Cashier 0's counter.
Customer 4 is leaving the Passport Office
Cashier 0 is going on break.
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Cashier 0 has received SSN 4 from Customer  .4 .
Cashier 0 has verified that4 has been certified by a PassportClerk.
Customer 4 has given SSN  to Pictu0 to Cashier 0.
Customer 4 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 4 after certification.Cashier 0 has provided Customer 4 their completed passport.Cashier 0 has recorded that Customer 4 has been given their completed passport.
Customer 4 is leaving Cashier 0's counter.
Customer 4 is leaving the Passport Office
Cashier 0 is going on break.
No threads ready or runnable, and no pending interrupts.
Assuming the program completed.

+ testexec: 
	- executes the helloworld user program 5 times. 
	- The output is the string "Hello world" printed 5 times, which proves that the user program executed successfully all five times.
	- Output: Hello World
			  Hello World
			  Hello World
			  Hello World
			  Hello World
+ testfork:
	- forks a helloworld function 5 times. 
	- The output is the string "Hello world" printed 5 times. This proves that each thread launched by fork successfully executed the function and finished.
	- Output: Hello World
			  Hello World
			  Hello World
			  Hello World
			  Hello World
+ testforkexec1:
	- executes helloworld 2 times, matmult2 2 times, and forks a helloworld function 2 times
	- if the output is satisfied, it proves each forked function and executed process successfully completed.
	- Output: 7220
			  Hello World
			  Hello World
			  7220
			  Hello World
			  Hello World
+ testforkexec2:
	- executes matmult2, forks a hello world function, executes the testfork user program, then executes the helloworld user program.
	- this test demonstrates forking from within a user program executed by the Exec syscall.
	- the output proves all forked functions and executed processes are successful, no matter whether the syscalls are called by the main process or thread.
	- Output: 
testforkexec2: executes matmult2, forks a hello world function, executes the testfork user program, then executes the helloworld user program.

7220
Hello World
ttestfork.c: this test forks a hello world function 5 times.
Done tDone testing Fork 
Hello World
Hello world. 
Hello world. 
Hello world. 
Hello world. 
Hello world. 
No threads ready or runnable, and no pending interrupts.
Assuming the program completed.
Machine halting!

+ testforkexecbad:
	- attempts to call Exec syscall on a couple of nonexistent executables.
	- prints an error indicating the files don't exist, and continues to complete the subsequent instructions.
	- proves the Nachos will not blow up due to input errors and will continue to execute the remaining syscalls without a hitch.
	- Output:
testforkexec1: this test executes helloworld 2 times, matmult2 2 times, and forks a helloworld function 2 times.
Cannot execute -- no such executable "../test/matmu2".
Cannot execute -- no such executable "../test/hellrld".

Hello World
Hello World
No threads ready or runnable, and no pending interrupts.
Assuming the program completed.

VI. Discussion:
	+ Experiment expectation.  (What is supposed to happen.)
		passport_office: Runs a full simulation of 10 customers going through the passport office
		run_passport_office: Executes two full simulations of two different passport offices going through their customers
		testexec: "Hello World" is printed 5 times to the console.
		testfork: "Hello World" is printed 5 times to the console.
		testforkexec1:  Output is "Hello world" 4 times and the results of matmult twice.
		testforkexec2: 	Output is the result of matmult2 once, and "Hello world" 7 times total.
		testforkexecbad: Prints errors, otherwise executes.
		testlock - testing lock functionality by successfully creating/acquiring/releasing a lock.
		testlockbad - testing bad calls to lock syscalls, such as incorrect indices. The program does not break but prints warnings and runs to completion.
		testlockcv1 - calls acquire, signal, and release in the correct order and runs to completion
		testlockcv2 - uses fork to check the functionality of a thread waiting on a condition then being signaled by another thread. thread waits, is signaled, and both run to completion.
		testlockcvbad1 - prints error statement for trying to use condition with invalid lock
		testlockcvbad2 - prints error statement for trying to call broadcase without acquiring the lock
		testprint - print 5.
		testrand - prints random number.
	+ Experiment result.  (What actually happened.)
		pasport_office: Successfully runs full simulation of 10 customers going through passport office
		run_pasport_office: Successfully runs two full simulations of customers going through the passport office
		testexec: "Hello World" is printed 5 times to the console.
		testfork: "Hello World" is printed 5 times to the console.
		testforkexec1:  Output is "Hello world" 4 times and the results of matmult twice.
		testforkexec2: 	Output is the result of matmult2 once, and "Hello world" 7 times total.
		testforkexecbad: Prints errors, otherwise executs.
		testlock - testing lock functionality by successfully creating/acquiring/releasing a lock.
		testlockbad - testing bad calls to lock syscalls, such as incorrect indices. The program does not break but prints warnings and runs to completion.
		testlockcv1 - calls acquire, signal, and release in the correct order and runs to completion
		testlockcv2 - uses fork to check the functionality of a thread waiting on a condition then being signaled by another thread. thread waits, is signaled, and both run to completion.
		testlockcvbad1 - prints error statement for trying to use condition with invalid lock
		testlockcvbad2 - prints error statement for trying to call broadcast without acquiring the lock
		testprint - print 5.
		testrand - prints random number.
	+ Explanation
		testexec: Because the helloworld program is being launched using the Exec syscall, we know that Exec correctly creates a new process. Using Exec multiple times shows that our program is correctly handling the allocation of memory.
		testfork: Because we are creating additional threads with the Fork syscall, we know that we are successfully adding threads to the process that are launching and completing. Using Fork multiple times shows that our program is correctly handling allocation of memory within a singular process.
		testforkexec1: This program proves that we support not only multiple single-threaded programs and multithreaded uniprograms, but multithreaded multiprogram execution. Because the print statements execute correctly, we know that we can handle both multiple programs and multiple threads.
		testforkexec2: This programs proves that we can fork from within a program created using Exec. This shows that we can not only use fork from our original process but from new created processes, further proving our memory allocation robustness and correctness.
		testforkexecbad: Because the user program could send any data to the OS for the system call, this proves the OS will not be compromised by bad input.
		testlock - Works because it correctly follows the order of creating, acquiring, then releasing the lock. This proves the intended functionality of our Lock still works evn with the new syscall wrapper.
		testlockbad - Because a User can call the syscall with any input, this test ensures that the OS does not break with the user program gives invalid input.
		testlockcv1 - Works because it correctly uses a singular lock and condition and calls signal, proving the functionality of conditions works.
		testlockcv2 - Tests the "shared" state of a condition by having two threads interact with a singular condition, with one waiting and one signaling. Proves that our Conditions still work in their typical use case even with the new syscall wrapper.
		testlockcvbad1 - Because a user program could botch the creation of a Condition, ensures that the OS is not affected by such an occasion.
		testlockcvbad2 - You must have acquired the Lock to interact with a condition. This ensures that the conditions of Condition are met before Condition functionality can be used.
		testprint - Very simple utility syscall, so unsurpisingly works as intended.
		testrand - Very simple utility syscall, so unsurpisingly works as intended.


VIII. Miscellaneous:
