 Title:  Writeup for Project 3, Fall 2015
 Date:  11/07/15
 Group:	Erika Johnson	erikajoh@usc.edu	
		Heather Persson	hpersson@usc.edu	
		Lorraine Sposto	llsposto@usc.edu

I. Requirements:
- Modify Nachos' memory mechanism to allow for virtual memory
- Implement an inverse page table
- Implement Demand Paged Virtual Memory, preloading nothing into memory
- Implement the MMU process to handle page faults, IPT misses, and employ the TLB
- Implement caching through a TLB to provide fast access to already-translated virtual pages
- Implement caching through a swap file, to store in such a way that gives the illusion of infinite memory and avoid loading from disk
- Implement Random and FIFO page replacement for when physical memory is full
- Provide necessary tests to demonstrate the functionality of the IPT, TLB, eviction and swap file
 //-- RPC ---//

II. Assumptions: *** TODO
	- A thread will explicitly exit out of itself
	- Nachos has finished running when the last running process finishes.

III. Design:
+ Parts 1 & 2
	- On a page fault, handlePageFault() begins the routine to load a page into memory.
	- handlePageFault():
		- searches IPT for physical page number that corresponds to the requested virtual page
		- if the PPN is not found --> ppn = handleIPTMiss()
		- with a valid PPN, updates the TLB with the page
		- if the eviction policy is FIFO, the VPN is added to the queue
	- handleIPTMiss()
		- finds an empty PPN in memory to put the VP
		- if no empty PPN --> ppn = handleMemoryFull()
		- assesses the location of the needed VP from the processes page table
		- if in EXECUTABLE, read a page from certain offset of the executable to memory
		- if in SWAP, read from a certain offset of the swap file to memory
		- updates physical page for the page table entry of the VPN
		- updates the IPT entry for the PPN found
		- returns PPN
	- handleMemoryFull()
		- selects a PPN to evict depending on policy: either random or FIFO
		- for FIFO: a pageQueue holds the recently accessed VPNs
		- after a page is selected for eviction, if it is in the TLB the TLB entry is invalidated
		- if the page is dirty, it is written to the swap file
		- returns PPN

	*** TODO RPC

IV. Implementation:
	+ Files Modified
		addrspace.cc - updated constructor to load nothing into memory, added PageTableEntry class
		exception.cc - implementation of all new system calls; implementation of virtual memory management routines
		progtest.cc - updating the process table with the very first process
		start.s - added assembly for new system calls
		syscall.h - added new #define values for new system calls, created function prototypes
		system.h - new global variables delcarations
		system.cc - new global varaible initialization

		*** TODO?

	+ Files added
		swapfile - file to be opened as the swapfile

	+ Data Structures added, and the file they were added to.
		system.h/cc - 
			class PageTableEntry : public TranslationEntry {
			public:
				enum DiskLocation {
					SWAP,
					EXECUTABLE,
					MEMORY
				};
				int byteOffset;
				int swapOffset;
				DiskLocation diskLocation;
			};
			class IPTEntry : public PageTableEntry {
			public:
				AddrSpace * space;
			};
			IPTEntry ipt[];
			Lock iptLock;
			Lock pageTableLock;
			int currentTLBEntry;
			bool isFIFO; //if not FIFO, RAND
			Queue pageQueue;
			OpenFile * swapFile;
			char * swapFileName;
			BitMap swapFileBM;
			Lock swapLock;

	+ Data Structures modified, and the file they were added to.
			
		addrspace.h:
			AddrSpace - page table modified to be of PageTableEntries

	+ Functions added and in which file.
			exception.h/cc
				handlePageFault() -- begins page fault handling routine to find PPN and update TLB
				handleIPTMiss() -- handles an IPT from handlePageFault and returns PPN
				handleMemoryFull() -- handles page eviction and returns PPN for handleIPTMiss
				beServer() -- *** TODO RPC

	+ Functions modified and in which file.
			addrspace.cc:
				AddrSpace(OpenFile *executable) - change to not load anything into memory
				SaveState/RestoreState - invalidates TLB on context switch
			exception.cc:
				ExceptionHandler(ExceptionType which) - expand for new syscall cases, add page fault handling

V. Testing:  (For each test case, you must show)

+ helloworld: 
	- helper user program that prints "Hello World".
+ matmult2: 
	- helper user program that is a copy of matmult, but prints the output to console.
+ passport_office:
	- fully-converted passport office as a user program
	- The output is the output from Project 1 of 10 customers going through the passport office.
	- Output:
Cashier 0 is going on break.
PictureClerk 0 is going on break.
ApplicationClerk 0 is going on break.
Customer 0 is entering the passport office.
Customer 0 has gotten in the regular line for PictureClerk 0.
Customer 1 is entering the passport office.
Customer 1 has gotten in the regular line for PictureClerk 0.
Customer 2 is entering the passport office.
Customer 2 has gotten in the regular line for PictureClerk 0.
Customer 3 is entering the passport office.
Customer 3 has gotten in the regular line for PictureClerk 0.
Customer 4 is entering the passport office.
Customer 4 has gotten in the regular line for PictureClerk 0.
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $0 for Cashiers
Manager  has counted amounts of $0 for the passport office
Manager 0 has woken up a PictureClerk.PictureClerk 0 is coming off break.
PictureClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
PictureClerk 0 has received SSN 0 from Customer  .0 .
PictureClerk 0 has taken a picture of Customer 0.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 0 does like their picture.
Customer 5 is leaving PictureClerk 0's counter.
Customer 0 has gotten in regular line for AppClerk 0.
PictureClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
PictureClerk 0 has received SSN 1 from Customer  .1 .
PictureClerk 0 has taken a picture of Customer 1.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 1 does like their picture.
Customer 5 is leaving PictureClerk 0's counter.
Customer 1 has gotten in regular line for AppClerk 0.
PictureClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
PictureClerk 0 has received SSN 2 from Customer  .2 .
PictureClerk 0 has taken a picture of Customer 2.
Customer 5 does like their picture from PictureClerk 0.
Manager 0 has woken up an ApplicationClerk.
PictureClerk 0 has been told that Customer 2 does like their picture.
ApplicationClerk 0 is coming off break.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 5 is leaving PictureClerk 0's counter.
Customer 2 has gotten in regular line for AppClerk 0.
Customer 0 has given SSN  to Pictu0 to AppClerk 0.
Customer 0 is waiting for clerk 0to file the application.
PictureClerk 0 has signalled a Customer to come to their counter.
ApplicationClerk 0 has received SSN 0 from Customer  .0 .
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
PictureClerk 0 has received SSN 3 from Customer  .3 .
PictureClerk 0 has taken a picture of Customer 3.
Customer 5 does not like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 3 does not like their picture.
PictureClerk 0 has taken a picture of Customer 3.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 3 does like their picture.
Customer 5 is leaving PictureClerk 0's counter.
Customer 3 has gotten in regular line for AppClerk 0.
PictureClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
PictureClerk 0 has received SSN 4 from Customer  .4 .
PictureClerk 0 has taken a picture of Customer 4.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 4 does like their picture.
Customer 5 is leaving PictureClerk 0's counter.
Customer 4 has gotten in regular line for AppClerk 0.
PictureClerk 0 is going on break.
ApplicationClerk 0 has recorded a complete application for Customer 0.
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $0 for Cashiers
Manager  has counted amounts of $0 for the passport office
Customer 0 is leaving ApplicationClerk 0's counter.
Customer 0 has gotten in regular line for PassportClerk 0.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 1 has given SSN  to Pictu0 to AppClerk 0.
Customer 1 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 1 from Customer  .1 .
Manager 0 has woken up a PassportClerk.
PassportClerk 0 is coming off break.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 0 has given SSN  to Pictu0 to PassportClerk 0.
PassportClerk 0 has received SSN 0 from Customer  .0 .
PassportClerk 0 has determined that Customer 0 does have both their application and picture completed
ApplicationClerk 0 has recorded a complete application for Customer 1.
Customer 1 is leaving ApplicationClerk 0's counter.
Customer 1 has gotten in regular line for PassportClerk 0.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 2 has given SSN  to Pictu0 to AppClerk 0.
Customer 2 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 2 from Customer  .2 .
ApplicationClerk 0 has recorded a complete application for Customer 2.
Customer 2 is leaving ApplicationClerk 0's counter.
Customer 2 has gotten in regular line for PassportClerk 0.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 3 has given SSN  to Pictu0 to AppClerk 0.
Customer 3 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 3 from Customer  .3 .
PassportClerk 0 has recorded Customer 0 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $0 for Cashiers
Manager  has counted amounts of $0 for the passport office
Customer 0 is leaving PassportClerk 0's counter.
Customer 0 has gotten in regular line for Cashier 0.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 1 has given SSN  to Pictu0 to PassportClerk 0.
PassportClerk 0 has received SSN 1 from Customer  .1 .
PassportClerk 0 has determined that Customer 1 does have both their application and picture completed
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Cashier 0 has received SSN 0 from Customer  .0 .
Cashier 0 has verified that0 has been certified by a PassportClerk.
Customer 0 has given SSN  to Pictu0 to Cashier 0.
Customer 0 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 0 after certification.Cashier 0 has provided Customer 0 their completed passport.Cashier 0 has recorded that Customer 0 has been given their completed passport.
Customer 0 is leaving Cashier 0's counter.
Customer 0 is leaving the Passport Office
Cashier 0 is going on break.
ApplicationClerk 0 has recorded a complete application for Customer 3.
Customer 3 is leaving ApplicationClerk 0's counter.
Customer 3 has gotten in regular line for PassportClerk 0.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 4 has given SSN  to Pictu0 to AppClerk 0.
Customer 4 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 4 from Customer  .4 .
PassportClerk 0 has recorded Customer 1 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $100 for Cashiers
Manager  has counted amounts of $100 for the passport office
Customer 1 is leaving PassportClerk 0's counter.
Customer 1 has gotten in regular line for Cashier 0.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 2 has given SSN  to Pictu0 to PassportClerk 0.
PassportClerk 0 has received SSN 2 from Customer  .2 .
PassportClerk 0 has determined that Customer 2 does have both their application and picture completed
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
ApplicationClerk 0 has recorded a complete application for Customer 4.
Cashier 0 has received SSN 1 from Customer  .1 .
Cashier 0 has verified that1 has been certified by a PassportClerk.
Customer 4 is leaving ApplicationClerk 0's counter.
Customer 4 has gotten in regular line for PassportClerk 0.
Customer 1 has given SSN  to Pictu0 to Cashier 0.
ApplicationClerk 0 is going on break.
Customer 1 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 1 after certification.Cashier 0 has provided Customer 1 their completed passport.Cashier 0 has recorded that Customer 1 has been given their completed passport.
Customer 1 is leaving Cashier 0's counter.
Customer 1 is leaving the Passport Office
Cashier 0 is going on break.
PassportClerk 0 has recorded Customer 2 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $200 for Cashiers
Manager  has counted amounts of $200 for the passport office
Customer 2 is leaving PassportClerk 0's counter.
Customer 2 has gotten in regular line for Cashier 0.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 3 has given SSN  to Pictu0 to PassportClerk 0.
PassportClerk 0 has received SSN 3 from Customer  .3 .
PassportClerk 0 has determined that Customer 3 does have both their application and picture completed
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Cashier 0 has received SSN 2 from Customer  .2 .
Cashier 0 has verified that2 has been certified by a PassportClerk.
Customer 2 has given SSN  to Pictu0 to Cashier 0.
Customer 2 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 2 after certification.Cashier 0 has provided Customer 2 their completed passport.Cashier 0 has recorded that Customer 2 has been given their completed passport.
Customer 2 is leaving Cashier 0's counter.
Customer 2 is leaving the Passport Office
Cashier 0 is going on break.
PassportClerk 0 has recorded Customer 3 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $300 for Cashiers
Manager  has counted amounts of $300 for the passport office
Customer 3 is leaving PassportClerk 0's counter.
Customer 3 has gotten in regular line for Cashier 0.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 4 has given SSN  to Pictu0 to PassportClerk 0.
PassportClerk 0 has received SSN 4 from Customer  .4 .
PassportClerk 0 has determined that Customer 4 does have both their application and picture completed
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Cashier 0 has received SSN 3 from Customer  .3 .
Cashier 0 has verified that3 has been certified by a PassportClerk.
Customer 3 has given SSN  to Pictu0 to Cashier 0.
Customer 3 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 3 after certification.Cashier 0 has provided Customer 3 their completed passport.Cashier 0 has recorded that Customer 3 has been given their completed passport.
Customer 3 is leaving Cashier 0's counter.
Customer 3 is leaving the Passport Office
Cashier 0 is going on break.
PassportClerk 0 has recorded Customer 4 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $400 for Cashiers
Manager  has counted amounts of $400 for the passport office
Customer 4 is leaving PassportClerk 0's counter.
Customer 4 has gotten in regular line for Cashier 0.
PassportClerk 0 is going on break.
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Cashier 0 has received SSN 4 from Customer  .4 .
Cashier 0 has verified that4 has been certified by a PassportClerk.
Customer 4 has given SSN  to Pictu0 to Cashier 0.
Customer 4 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 4 after certification.Cashier 0 has provided Customer 4 their completed passport.Cashier 0 has recorded that Customer 4 has been given their completed passport.
Customer 4 is leaving Cashier 0's counter.
Customer 4 is leaving the Passport Office
Cashier 0 is going on break.

+ run_passport_office:
	- runs the passport office twice
	- The output is from two different passport offices serving 10 customers to completion
	- Output:
run_passport_office: executes two instances of the passport office.
PassportClerk 0 is going on break.
        Non-owner thread kernel_thread 2 cannot release lock ppClerkIndexLock!
Cashier 0 is going on break.
PictureClerk 0 is going on break.
ApplicationClerk 0 is going on break.
Customer 0 is entering the passport office.
Customer 0 has gotten in the regular line for PictureClerk 0.
Customer 1 is entering the passport office.
Customer 1 has gotten in the regular line for PictureClerk 0.
Customer 2 is entering the passport office.
Customer 2 has gotten in the regular line for PictureClerk 0.
Customer 3 is entering the passport office.
Customer 3 has gotten in the regular line for PictureClerk 0.
Customer 4 is entering the passport office.
Customer 4 has gotten in the regular line for PictureClerk 0.
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $0 for Cashiers
Manager  has counted amounts of $0 for the passport office
Manager 0 has woken up a PictureClerk.PassportClerk 0 is going on break.
        Non-owner thread kernel_thread 2 cannot release lock ppClerkIndexLock!
Cashier 0 is going on break.
PictureClerk 0 is going on break.
ApplicationClerk 0 is going on break.
Customer 0 is entering the passport office.
Customer 0 has gotten in regular line for AppClerk 0.
Customer 1 is entering the passport office.
Customer 1 has gotten in regular line for AppClerk 0.
Customer 2 is entering the passport office.
Customer 2 has gotten in regular line for AppClerk 0.
Customer 3 is entering the passport office.
Customer 3 has gotten in regular line for AppClerk 0.
Customer 4 is entering the passport office.
Customer 4 has gotten in regular line for AppClerk 0.
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $0 for Cashiers
Manager  has counted amounts of $0 for the passport office
Manager 0 has woken up an ApplicationClerk.
PictureClerk 0 is coming off break.
PictureClerk 0 has signalled a Customer to come to their counter.
ApplicationClerk 0 is coming off break.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
Customer 0 has given SSN  to Pictu0 to AppClerk 0.
Customer 0 is waiting for clerk 0to file the application.
PictureClerk 0 has received SSN 0 from Customer  .0 .
PictureClerk 0 has taken a picture of Customer 0.
ApplicationClerk 0 has received SSN 0 from Customer  .0 .
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 0 does like their picture.
Customer 5 is leaving PictureClerk 0's counter.
Customer 0 has gotten in regular line for AppClerk 0.
PictureClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
PictureClerk 0 has received SSN 1 from Customer  .1 .
PictureClerk 0 has taken a picture of Customer 1.
Customer 5 does not like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 1 does not like their picture.
PictureClerk 0 has taken a picture of Customer 1.
Customer 5 does not like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 1 does not like their picture.
PictureClerk 0 has taken a picture of Customer 1.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 1 does like their picture.
Customer 5 is leaving PictureClerk 0's counter.
Customer 1 has gotten in regular line for AppClerk 0.
PictureClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
PictureClerk 0 has received SSN 2 from Customer  .2 .
PictureClerk 0 has taken a picture of Customer 2.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 2 does like their picture.
Customer 5 is leaving PictureClerk 0's counter.
Customer 2 has gotten in regular line for AppClerk 0.
PictureClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
PictureClerk 0 has received SSN 3 from Customer  .3 .
PictureClerk 0 has taken a picture of Customer 3.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 3 does like their picture.
Customer 5 is leaving PictureClerk 0's counter.
Customer 3 has gotten in regular line for AppClerk 0.
PictureClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
PictureClerk 0 has received SSN 4 from Customer  .4 .
PictureClerk 0 has taken a picture of Customer 4.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 4 does like their picture.
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $0 for Cashiers
Manager  has counted amounts of $0 for the passport office
Manager 0 has woken up an ApplicationClerk.
Customer 5 is leaving PictureClerk 0's counter.
Customer 4 has gotten in regular line for AppClerk 0.
ApplicationClerk 0 is coming off break.
ApplicationClerk 0 has signalled a Customer to come to their counter.
PictureClerk 0 is going on break.
Customer 0 has given SSN  to Pictu0 to AppClerk 0.
Customer 0 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 0 from Customer  .0 .
ApplicationClerk 0 has recorded a complete application for Customer 0.
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $0 for Cashiers
Manager  has counted amounts of $0 for the passport office
Customer 0 is leaving ApplicationClerk 0's counter.
Customer 0 has gotten in the regular line for PictureClerk 0.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 1 has given SSN  to Pictu0 to AppClerk 0.
Customer 1 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 1 from Customer  .1 .
ApplicationClerk 0 has recorded a complete application for Customer 0.
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $0 for Cashiers
Manager  has counted amounts of $0 for the passport office
Customer 0 is leaving ApplicationClerk 0's counter.
Customer 0 has gotten in regular line for PassportClerk 0.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 1 has given SSN  to Pictu0 to AppClerk 0.
Customer 1 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 1 from Customer  .1 .
Manager 0 has woken up a PassportClerk.
PassportClerk 0 is coming off break.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 0 has given SSN  to Pictu0 to PassportClerk 0.
PassportClerk 0 has received SSN 0 from Customer  .0 .
PassportClerk 0 has determined that Customer 0 does have both their application and picture completed
Manager 0 has woken up a PictureClerk.PictureClerk 0 is coming off break.
PictureClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
PictureClerk 0 has received SSN 0 from Customer  .0 .
PictureClerk 0 has taken a picture of Customer 0.
Customer 5 does not like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 0 does not like their picture.
PictureClerk 0 has taken a picture of Customer 0.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 0 does like their picture.
Customer 5 is leaving PictureClerk 0's counter.
Customer 0 has gotten in regular line for PassportClerk 0.
PictureClerk 0 is going on break.
ApplicationClerk 0 has recorded a complete application for Customer 1.
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $0 for Cashiers
Manager  has counted amounts of $0 for the passport office
Manager 0 has woken up a PassportClerk.
Customer 1 is leaving ApplicationClerk 0's counter.
Customer 1 has gotten in the regular line for PictureClerk 0.
PassportClerk 0 is coming off break.
PassportClerk 0 has signalled a Customer to come to their counter.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 0 has given SSN  to Pictu0 to PassportClerk 0.
Customer 2 has given SSN  to Pictu0 to AppClerk 0.
Customer 2 is waiting for clerk 0to file the application.
PassportClerk 0 has received SSN 0 from Customer  .0 .
PassportClerk 0 has determined that Customer 0 does have both their application and picture completed
ApplicationClerk 0 has received SSN 2 from Customer  .2 .
Manager 0 has woken up a PictureClerk.PictureClerk 0 is coming off break.
PictureClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
PictureClerk 0 has received SSN 1 from Customer  .1 .
PictureClerk 0 has taken a picture of Customer 1.
Customer 5 does not like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 1 does not like their picture.
PictureClerk 0 has taken a picture of Customer 1.
ApplicationClerk 0 has recorded a complete application for Customer 1.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 1 does like their picture.
Customer 1 is leaving ApplicationClerk 0's counter.
Customer 1 has gotten in regular line for PassportClerk 0.
Customer 5 is leaving PictureClerk 0's counter.
Customer 1 has gotten in regular line for PassportClerk 0.
ApplicationClerk 0 has signalled a Customer to come to their counter.
PictureClerk 0 is going on break.
Customer 2 has given SSN  to Pictu0 to AppClerk 0.
Customer 2 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 2 from Customer  .2 .
ApplicationClerk 0 has recorded a complete application for Customer 2.
Customer 2 is leaving ApplicationClerk 0's counter.
Customer 2 has gotten in the regular line for PictureClerk 0.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 3 has given SSN  to Pictu0 to AppClerk 0.
Customer 3 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 3 from Customer  .3 .
PassportClerk 0 has recorded Customer 0 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $0 for Cashiers
Manager  has counted amounts of $0 for the passport office
Customer 0 is leaving PassportClerk 0's counter.
Customer 0 has gotten in regular line for Cashier 0.
ApplicationClerk 0 has recorded a complete application for Customer 2.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 2 is leaving ApplicationClerk 0's counter.
Customer 2 has gotten in regular line for PassportClerk 0.
Customer 1 has given SSN  to Pictu0 to PassportClerk 0.
ApplicationClerk 0 has signalled a Customer to come to their counter.
PassportClerk 0 has received SSN 1 from Customer  .1 .
PassportClerk 0 has determined that Customer 1 does have both their application and picture completed
Customer 3 has given SSN  to Pictu0 to AppClerk 0.
Customer 3 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 3 from Customer  .3 .
PassportClerk 0 has recorded Customer 0 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $0 for Cashiers
Manager  has counted amounts of $0 for the passport office
Manager 0 has woken up a PictureClerk.Customer 0 is leaving PassportClerk 0's counter.
Customer 0 has gotten in regular line for Cashier 0.
PictureClerk 0 is coming off break.
PictureClerk 0 has signalled a Customer to come to their counter.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
Customer 1 has given SSN  to Pictu0 to PassportClerk 0.
PictureClerk 0 has received SSN 2 from Customer  .2 .
PictureClerk 0 has taken a picture of Customer 2.
PassportClerk 0 has received SSN 1 from Customer  .1 .
PassportClerk 0 has determined that Customer 1 does have both their application and picture completed
Customer 5 does not like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 2 does not like their picture.
PictureClerk 0 has taken a picture of Customer 2.
Customer 5 does not like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 2 does not like their picture.
PictureClerk 0 has taken a picture of Customer 2.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 2 does like their picture.
Customer 5 is leaving PictureClerk 0's counter.
Customer 2 has gotten in regular line for PassportClerk 0.
Manager 0 has woken up a Cashier.
PictureClerk 0 is going on break.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Manager 0 has woken up a Cashier.
Cashier 0 has received SSN 0 from Customer  .0 .
Cashier 0 has verified that0 has been certified by a PassportClerk.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Customer 0 has given SSN  to Pictu0 to Cashier 0.
Cashier 0 has received SSN 0 from Customer  .0 .
Cashier 0 has verified that0 has been certified by a PassportClerk.
Customer 0 has given Cashier  $100.
 0 $100.
Customer 0 has given SSN  to Pictu0 to Cashier 0.
Cashier 0 has received the $100 from Customer 0 after certification.Cashier 0 has provided Customer 0 their completed passport.Cashier 0 has recorded that Customer 0 has been given their completed passport.
Customer 0 is leaving Cashier 0's counter.
Customer 0 is leaving the Passport Office
Customer 0 has given Cashier  $100.
 0 $100.
Cashier 0 is going on break.
Cashier 0 has received the $100 from Customer 0 after certification.Cashier 0 has provided Customer 0 their completed passport.Cashier 0 has recorded that Customer 0 has been given their completed passport.
Customer 0 is leaving Cashier 0's counter.
Customer 0 is leaving the Passport Office
Cashier 0 is going on break.
ApplicationClerk 0 has recorded a complete application for Customer 3.
Customer 3 is leaving ApplicationClerk 0's counter.
Customer 3 has gotten in the regular line for PictureClerk 0.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 4 has given SSN  to Pictu0 to AppClerk 0.
Customer 4 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 4 from Customer  .4 .
ApplicationClerk 0 has recorded a complete application for Customer 3.
Customer 3 is leaving ApplicationClerk 0's counter.
Customer 3 has gotten in regular line for PassportClerk 0.
ApplicationClerk 0 has signalled a Customer to come to their counter.
Customer 4 has given SSN  to Pictu0 to AppClerk 0.
Customer 4 is waiting for clerk 0to file the application.
ApplicationClerk 0 has received SSN 4 from Customer  .4 .
ApplicationClerk 0 has recorded a complete application for Customer 4.
Customer 4 is leaving ApplicationClerk 0's counter.
Customer 4 has gotten in the regular line for PictureClerk 0.
PassportClerk 0 has recorded Customer 1 passport documentation
ApplicationClerk 0 is going on break.
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $100 for Cashiers
Manager  has counted amounts of $100 for the passport office
Customer 1 is leaving PassportClerk 0's counter.
Customer 1 has gotten in regular line for Cashier 0.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 2 has given SSN  to Pictu0 to PassportClerk 0.
PassportClerk 0 has received SSN 2 from Customer  .2 .
PassportClerk 0 has determined that Customer 2 does have both their application and picture completed
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Cashier 0 has received SSN 1 from Customer  .1 .
Cashier 0 has verified that1 has been certified by a PassportClerk.
Customer 1 has given SSN  to Pictu0 to Cashier 0.
Customer 1 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 1 after certification.Cashier 0 has provided Customer 1 their completed passport.Cashier 0 has recorded that Customer 1 has been given their completed passport.
Customer 1 is leaving Cashier 0's counter.
Customer 1 is leaving the Passport Office
PassportClerk 0 has recorded Customer 1 passport documentation
Cashier 0 is going on break.
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $100 for Cashiers
Manager  has counted amounts of $100 for the passport office
Manager 0 has woken up a PictureClerk.Customer 1 is leaving PassportClerk 0's counter.
Customer 1 has gotten in regular line for Cashier 0.
PictureClerk 0 is coming off break.
PictureClerk 0 has signalled a Customer to come to their counter.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
Customer 2 has given SSN  to Pictu0 to PassportClerk 0.
PictureClerk 0 has received SSN 3 from Customer  .3 .
PictureClerk 0 has taken a picture of Customer 3.
PassportClerk 0 has received SSN 2 from Customer  .2 .
PassportClerk 0 has determined that Customer 2 does have both their application and picture completed
Customer 5 does like their picture from PictureClerk 0.
ApplicationClerk 0 has recorded a complete application for Customer 4.
PictureClerk 0 has been told that Customer 3 does like their picture.
Manager 0 has woken up a Cashier.
Customer 4 is leaving ApplicationClerk 0's counter.
Customer 4 has gotten in regular line for PassportClerk 0.
Customer 5 is leaving PictureClerk 0's counter.
Customer 3 has gotten in regular line for PassportClerk 0.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
ApplicationClerk 0 is going on break.
PictureClerk 0 has signalled a Customer to come to their counter.
Customer 5 has given SSN  to Pictu0 to PictureClerk 0.
Cashier 0 has received SSN 1 from Customer  .1 .
Cashier 0 has verified that1 has been certified by a PassportClerk.
PictureClerk 0 has received SSN 4 from Customer  .4 .
PictureClerk 0 has taken a picture of Customer 4.
Customer 1 has given SSN  to Pictu0 to Cashier 0.
Customer 5 does like their picture from PictureClerk 0.
PictureClerk 0 has been told that Customer 4 does like their picture.
Customer 1 has given Cashier  $100.
 0 $100.
Customer 5 is leaving PictureClerk 0's counter.
Customer 4 has gotten in regular line for PassportClerk 0.
Cashier 0 has received the $100 from Customer 1 after certification.Cashier 0 has provided Customer 1 their completed passport.Cashier 0 has recorded that Customer 1 has been given their completed passport.
PictureClerk 0 is going on break.
Customer 1 is leaving Cashier 0's counter.
Customer 1 is leaving the Passport Office
Cashier 0 is going on break.
PassportClerk 0 has recorded Customer 2 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $200 for Cashiers
Manager  has counted amounts of $200 for the passport office
Customer 2 is leaving PassportClerk 0's counter.
Customer 2 has gotten in regular line for Cashier 0.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 3 has given SSN  to Pictu0 to PassportClerk 0.
PassportClerk 0 has received SSN 3 from Customer  .3 .
PassportClerk 0 has determined that Customer 3 does have both their application and picture completed
PassportClerk 0 has recorded Customer 2 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $200 for Cashiers
Manager  has counted amounts of $200 for the passport office
Customer 2 is leaving PassportClerk 0's counter.
Customer 2 has gotten in regular line for Cashier 0.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 3 has given SSN  to Pictu0 to PassportClerk 0.
PassportClerk 0 has received SSN 3 from Customer  .3 .
PassportClerk 0 has determined that Customer 3 does have both their application and picture completed
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Cashier 0 has received SSN 2 from Customer  .2 .
Cashier 0 has verified that2 has been certified by a PassportClerk.
Customer 2 has given SSN  to Pictu0 to Cashier 0.
Customer 2 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 2 after certification.Cashier 0 has provided Customer 2 their completed passport.Cashier 0 has recorded that Customer 2 has been given their completed passport.
Customer 2 is leaving Cashier 0's counter.
Customer 2 is leaving the Passport Office
Cashier 0 is going on break.
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Cashier 0 has received SSN 2 from Customer  .2 .
Cashier 0 has verified that2 has been certified by a PassportClerk.
Customer 2 has given SSN  to Pictu0 to Cashier 0.
Customer 2 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 2 after certification.Cashier 0 has provided Customer 2 their completed passport.Cashier 0 has recorded that Customer 2 has been given their completed passport.
Customer 2 is leaving Cashier 0's counter.
Customer 2 is leaving the Passport Office
Cashier 0 is going on break.
PassportClerk 0 has recorded Customer 3 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $300 for Cashiers
Manager  has counted amounts of $300 for the passport office
Customer 3 is leaving PassportClerk 0's counter.
Customer 3 has gotten in regular line for Cashier 0.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 4 has given SSN  to Pictu0 to PassportClerk 0.
PassportClerk 0 has received SSN 4 from Customer  .4 .
PassportClerk 0 has determined that Customer 4 does have both their application and picture completed
PassportClerk 0 has recorded Customer 3 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $300 for Cashiers
Manager  has counted amounts of $300 for the passport office
Customer 3 is leaving PassportClerk 0's counter.
Customer 3 has gotten in regular line for Cashier 0.
PassportClerk 0 has signalled a Customer to come to their counter.
Customer 4 has given SSN  to Pictu0 to PassportClerk 0.
PassportClerk 0 has received SSN 4 from Customer  .4 .
PassportClerk 0 has determined that Customer 4 does have both their application and picture completed
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Cashier 0 has received SSN 3 from Customer  .3 .
Cashier 0 has verified that3 has been certified by a PassportClerk.
Customer 3 has given SSN  to Pictu0 to Cashier 0.
Customer 3 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 3 after certification.Cashier 0 has provided Customer 3 their completed passport.Cashier 0 has recorded that Customer 3 has been given their completed passport.
Customer 3 is leaving Cashier 0's counter.
Customer 3 is leaving the Passport Office
Cashier 0 is going on break.
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Cashier 0 has received SSN 3 from Customer  .3 .
Cashier 0 has verified that3 has been certified by a PassportClerk.
Customer 3 has given SSN  to Pictu0 to Cashier 0.
Customer 3 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 3 after certification.Cashier 0 has provided Customer 3 their completed passport.Cashier 0 has recorded that Customer 3 has been given their completed passport.
Customer 3 is leaving Cashier 0's counter.
Customer 3 is leaving the Passport Office
Cashier 0 is going on break.
PassportClerk 0 has recorded Customer 4 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $400 for Cashiers
Manager  has counted amounts of $400 for the passport office
Customer 4 is leaving PassportClerk 0's counter.
Customer 4 has gotten in regular line for Cashier 0.
PassportClerk 0 is going on break.
PassportClerk 0 has recorded Customer 4 passport documentation
Manager  has counted amounts of $0 for PictureClerks
Manager  has counted amounts of $0 for ApplicationClerks
Manager  has counted amounts of $0 for PassportClerks
Manager  has counted amounts of $400 for Cashiers
Manager  has counted amounts of $400 for the passport office
Customer 4 is leaving PassportClerk 0's counter.
Customer 4 has gotten in regular line for Cashier 0.
PassportClerk 0 is going on break.
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Cashier 0 has received SSN 4 from Customer  .4 .
Cashier 0 has verified that4 has been certified by a PassportClerk.
Customer 4 has given SSN  to Pictu0 to Cashier 0.
Customer 4 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 4 after certification.Cashier 0 has provided Customer 4 their completed passport.Cashier 0 has recorded that Customer 4 has been given their completed passport.
Customer 4 is leaving Cashier 0's counter.
Customer 4 is leaving the Passport Office
Cashier 0 is going on break.
Manager 0 has woken up a Cashier.
Cashier 0 is coming off break.
Cashier 0 has signalled a Customer to come to their counter.
Cashier 0 has received SSN 4 from Customer  .4 .
Cashier 0 has verified that4 has been certified by a PassportClerk.
Customer 4 has given SSN  to Pictu0 to Cashier 0.
Customer 4 has given Cashier  $100.
 0 $100.
Cashier 0 has received the $100 from Customer 4 after certification.Cashier 0 has provided Customer 4 their completed passport.Cashier 0 has recorded that Customer 4 has been given their completed passport.
Customer 4 is leaving Cashier 0's counter.
Customer 4 is leaving the Passport Office
Cashier 0 is going on break.
No threads ready or runnable, and no pending interrupts.
Assuming the program completed.

+ testexec: 
	- executes the helloworld user program 5 times. 
	- The output is the string "Hello world" printed 5 times, which proves that the user program executed successfully all five times.
	- Output: Hello World
			  Hello World
			  Hello World
			  Hello World
			  Hello World
+ testfork:
	- forks a helloworld function 5 times. 
	- The output is the string "Hello world" printed 5 times. This proves that each thread launched by fork successfully executed the function and finished.
	- Output: Hello World
			  Hello World
			  Hello World
			  Hello World
			  Hello World
+ testforkexec1:
	- executes helloworld 2 times, matmult2 2 times, and forks a helloworld function 2 times
	- if the output is satisfied, it proves each forked function and executed process successfully completed.
	- Output: 7220
			  Hello World
			  Hello World
			  7220
			  Hello World
			  Hello World
+ testforkexec2:
	- executes matmult2, forks a hello world function, executes the testfork user program, then executes the helloworld user program.
	- this test demonstrates forking from within a user program executed by the Exec syscall.
	- the output proves all forked functions and executed processes are successful, no matter whether the syscalls are called by the main process or thread.
	- Output: 
testforkexec2: executes matmult2, forks a hello world function, executes the testfork user program, then executes the helloworld user program.

7220
Hello World
ttestfork.c: this test forks a hello world function 5 times.
Done tDone testing Fork 
Hello World
Hello world. 
Hello world. 
Hello world. 
Hello world. 
Hello world. 
No threads ready or runnable, and no pending interrupts.
Assuming the program completed.
Machine halting!

+ testforkexecbad:
	- attempts to call Exec syscall on a couple of nonexistent executables.
	- prints an error indicating the files don't exist, and continues to complete the subsequent instructions.
	- proves the Nachos will not blow up due to input errors and will continue to execute the remaining syscalls without a hitch.
	- Output:
testforkexec1: this test executes helloworld 2 times, matmult2 2 times, and forks a helloworld function 2 times.
Cannot execute -- no such executable "../test/matmu2".
Cannot execute -- no such executable "../test/hellrld".

Hello World
Hello World
No threads ready or runnable, and no pending interrupts.
Assuming the program completed.

+ testlock:
	- attempts to create, acquire, release and destroy a lock (right order)
	- Output:
Creating lock Lock 1, index 0.
Acquiring lock Lock 1.
Releasing lock Lock 1.
Lock Lock 1 will be destroyed.
Finishing thread "main"
Sleeping thread "main"
No threads ready or runnable, and no pending interrupts.
Assuming the program completed.

+ testlockbad:
	- attempts to create, release, acquire and destroy a lock (wrong order)
	- Output:
testlockbad: this test creates a lock and calls acquire and release in the wrong order.
Creating lock Lock 1, index 0.
Releasing lock Lock 1.
        Non-owner thread main cannot release lock Lock 1!
Acquiring lock Lock 1.
Lock Lock 1 is still busy. Won't destroy.
Finishing thread "main"
Sleeping thread "main"
No threads ready or runnable, and no pending interrupts.
Assuming the program completed.

+ testcondition1:
	- attempts to create, broadcast and release a condition variable (with an associated lock)
	- Output:
testcondition1: this test creates a lock and condition and calls acquire, broadcast, and release in the right order.
Creating lock Lock 1, index 0.
Acquiring lock Lock 1.
Creating condition Condition 1, index 0.
Condition [Condition 1] broadcasting on lock [Lock 1].
Releasing lock Lock 1.
Condition Condition 1 will be destroyed.
Lock Lock 1 will be destroyed.
Finishing thread "main"
Sleeping thread "main"
No threads ready or runnable, and no pending interrupts.
Assuming the program completed.

+ testcondition2:
	- attempts to create, signal and release a condition variable (with an associated lock)
	- Output:
testcondition2: this test creates a lock and condition and calls acquire, signal, and release in the right order.
Creating lock Lock 1, index 0.
Acquiring lock Lock 1.
Creating condition Condition 1, index 0.
Condition [Condition 1] signaling on lock [Lock 1].
Releasing lock Lock 1.
Condition Condition 1 will be destroyed.
Lock Lock 1 will be destroyed.
Finishing thread "main"
Sleeping thread "main"
No threads ready or runnable, and no pending interrupts.
Assuming the program completed.

+ testconditionbad1:
	- attempts to create a condition variable without an associated lock
	- Output:
testconditionbad1: this test creates a condition without a valid lock.
Creating condition Condition 1, index 0.
Bad lock index to broadcast.
Condition Condition 1 will be destroyed.
Finishing thread "main"
Sleeping thread "main"
No threads ready or runnable, and no pending interrupts.
Assuming the program completed.

+ testconditionbad2:
	- attempts to create a condition without acquiring the associated lock
	- Output:
testconditionbad2: this test creates a lock and condition and calls broadcast without acquiring the lock.
Creating lock Lock 1, index 0.
Creating condition Condition 1, index 0.
Condition [Condition 1] broadcasting on lock [Lock 1].
Trying to call Broadcast on Lock not owned by mainCondition Condition 1 will be destroyed.
Lock Lock 1 will be destroyed.
Finishing thread "main"
Sleeping thread "main"
No threads ready or runnable, and no pending interrupts.
Assuming the program completed.

+ testprint:
	- attempts to print the integer 5
	- Output:
5Finishing thread "main"
Sleeping thread "main"
No threads ready or runnable, and no pending interrupts.
Assuming the program completed.

+ testrand:
	- attempts to print random numbers
	- Output:
12345
1406932606
654583775
1449466924
Finishing thread "main"
Sleeping thread "main"
No threads ready or runnable, and no pending interrupts.
Assuming the program completed.

VI. Discussion:
	+ Experiment expectation.  (What is supposed to happen.)
		passport_office: Runs a full simulation of 10 customers going through the passport office
		run_passport_office: Executes two full simulations of two different passport offices going through their customers
		testexec: "Hello World" is printed 5 times to the console.
		testfork: "Hello World" is printed 5 times to the console.
		testforkexec1:  Output is "Hello world" 4 times and the results of matmult twice.
		testforkexec2: 	Output is the result of matmult2 once, and "Hello world" 7 times total.
		testforkexecbad: Prints errors, otherwise executes.
		testlock - testing lock functionality by successfully creating/acquiring/releasing a lock.
		testlockbad - testing bad calls to lock syscalls, such as incorrect indices. The program does not break but prints warnings and runs to completion.
		testcondition1 - calls acquire, broadcast, and release in the correct order and runs to completion
		testcondition2 - calls acquire, signal, and release in the correct order and runs to completion
		testconditionbad1 - prints error statement for trying to use condition with invalid lock
		testconditionbad2 - prints error statement for trying to call broadcase without acquiring the lock
		testprint - print 5.
		testrand - prints random number.
	+ Experiment result.  (What actually happened.)
		pasport_office: Successfully runs full simulation of 10 customers going through passport office
		run_pasport_office: Successfully runs two full simulations of customers going through the passport office
		testexec: "Hello World" is printed 5 times to the console.
		testfork: "Hello World" is printed 5 times to the console.
		testforkexec1:  Output is "Hello world" 4 times and the results of matmult twice.
		testforkexec2: 	Output is the result of matmult2 once, and "Hello world" 7 times total.
		testforkexecbad: Prints errors, otherwise executs.
		testlock - testing lock functionality by successfully creating/acquiring/releasing a lock.
		testlockbad - testing bad calls to lock syscalls, such as incorrect indices. The program does not break but prints warnings and runs to completion.
		testcondition1 - calls acquire, broadcast, and release in the correct order and runs to completion
		testcondition2 - calls acquire, signal, and release in the correct order and runs to completion
		testconditionbad1 - prints error statement for trying to use condition with invalid lock
		testconditionbad2 - prints error statement for trying to call broadcast without acquiring the lock
		testprint - print 5.
		testrand - prints random number.
	+ Explanation
		testexec: Because the helloworld program is being launched using the Exec syscall, we know that Exec correctly creates a new process. Using Exec multiple times shows that our program is correctly handling the allocation of memory.
		testfork: Because we are creating additional threads with the Fork syscall, we know that we are successfully adding threads to the process that are launching and completing. Using Fork multiple times shows that our program is correctly handling allocation of memory within a singular process.
		testforkexec1: This program proves that we support not only multiple single-threaded programs and multithreaded uniprograms, but multithreaded multiprogram execution. Because the print statements execute correctly, we know that we can handle both multiple programs and multiple threads.
		testforkexec2: This programs proves that we can fork from within a program created using Exec. This shows that we can not only use fork from our original process but from new created processes, further proving our memory allocation robustness and correctness.
		testforkexecbad: Because the user program could send any data to the OS for the system call, this proves the OS will not be compromised by bad input.
		testlock - Works because it correctly follows the order of creating, acquiring, then releasing the lock. This proves the intended functionality of our Lock still works evn with the new syscall wrapper.
		testlockbad - Because a User can call the syscall with any input, this test ensures that the OS does not break with the user program gives invalid input.
		testcondition1 - Works because it correctly uses a singular lock and condition and calls broadcast, proving the functionality of conditions works.
		testcondition2 - Works because it correctly uses a singular lock and condition and calls signal, proving the functionality of conditions works.
		testconditionbad1 - Because a user program could botch the creation of a Condition, ensures that the OS is not affected by such an occasion.
		testconditionbad2 - You must have acquired the Lock to interact with a condition. This ensures that the conditions of Condition are met before Condition functionality can be used.
		testprint - Very simple utility syscall, so unsurpisingly works as intended.
		testrand - Very simple utility syscall, so unsurpisingly works as intended.


VIII. Miscellaneous:
